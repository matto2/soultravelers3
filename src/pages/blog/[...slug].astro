---
import { type CollectionEntry, getCollection, getEntry } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import BlogContent from '../../components/BlogContent.astro';
import { render } from 'astro:content';

const { slug } = Astro.params;

// Try to get the post from either collection
let post: CollectionEntry<'blog'> | CollectionEntry<'posts'> | undefined;

// Try posts collection first (Keystatic)
try {
	post = await getEntry('posts', slug!);
} catch (e) {
	// Ignore error, post doesn't exist in this collection
}

// If not found, try blog collection
if (!post) {
	try {
		post = await getEntry('blog', slug!);
	} catch (e) {
		// Ignore error
	}
}

// If still not found, return 404
if (!post) {
	return Astro.redirect('/404');
}

// For Keystatic posts, render the content properly
// For regular blog posts, use the body as-is
const isKeystatic = post.collection === 'posts';
const { Content } = isKeystatic ? await render(post) : { Content: null };
---

<BlogPost {...post.data}>
	{Content ? (
		<Content />
	) : (
		<BlogContent content={post.body} showTeaser={false} />
	)}
</BlogPost>
